{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Exude API The latest version is: 1.0.0 Open Source The Apache License. Exude API is Open source project and it is used for the primary ways for removing/filtering the stopping,stemming words from the text data, this API is in a very basic level of development need to work on for later changes. Features Filter stopping words from given text/file/link. Filter stemming words from given text/file/link. Get swear words from given text/file/link Stopping and Porter stemming algorithm Stop words are words which are filtered out before or after processing of natural language data, Though \"stop words\" usually refers to the most common words in a language i.e this, that ,what,where...etc The Porter stemming algorithm (or 'Porter stemmer') is a process for removing the commoner morphological and inflexional endings from words in English. Its main use is as part of a term normalisation process that is usually done when setting up Information Retrieval systems. Terms with a common stem will usually hava similar meanings, for example: REPORT REPROTING REPORTS REPORTED .... CONNECT CONNECTION CONNECTED CONNECTING CONNECTIONs By removing the various suffixs -ED,-ING,-ION,IONS to leave the single word. How Exude API library works Filter the duplicate words from the input data/file. Filter the stopping words from step1 filtered data. Filter the stemmer/swear words from step2 filtered data using the Porter algorithm which is used for suffix stripping. exude process sequence flow: Demo Please checkout the demo portal to test Exude API. Exude API Demo!","title":"Overview"},{"location":"#exude-api","text":"The latest version is: 1.0.0 Open Source The Apache License. Exude API is Open source project and it is used for the primary ways for removing/filtering the stopping,stemming words from the text data, this API is in a very basic level of development need to work on for later changes.","title":" Exude API"},{"location":"#features","text":"Filter stopping words from given text/file/link. Filter stemming words from given text/file/link. Get swear words from given text/file/link","title":"Features"},{"location":"#stopping-and-porter-stemming-algorithm","text":"Stop words are words which are filtered out before or after processing of natural language data, Though \"stop words\" usually refers to the most common words in a language i.e this, that ,what,where...etc The Porter stemming algorithm (or 'Porter stemmer') is a process for removing the commoner morphological and inflexional endings from words in English. Its main use is as part of a term normalisation process that is usually done when setting up Information Retrieval systems. Terms with a common stem will usually hava similar meanings, for example: REPORT REPROTING REPORTS REPORTED .... CONNECT CONNECTION CONNECTED CONNECTING CONNECTIONs By removing the various suffixs -ED,-ING,-ION,IONS to leave the single word.","title":"Stopping and Porter stemming algorithm"},{"location":"#how-exude-api-library-works","text":"Filter the duplicate words from the input data/file. Filter the stopping words from step1 filtered data. Filter the stemmer/swear words from step2 filtered data using the Porter algorithm which is used for suffix stripping. exude process sequence flow:","title":"How Exude API library works"},{"location":"#demo","text":"Please checkout the demo portal to test Exude API. Exude API Demo!","title":"Demo"},{"location":"api-explorer/","text":"Exude API Version: 1.0.0 Open API Swagger Spec Terms of service Terms /exude/stopping/data POST Summary Filter the stopping words from the provided input data or links Parameters Name Located in Description Required Schema type path provide the type of filtering required stopping Yes string Request Body Pass the ExudeRequestBean Object, pass either text data or data links { \"data\": \"string\", \"links\": [ \"string\" ] } Responses Code Description 200 Exude response Sample RequestBody: { \"links\":[ \"https://en.wikipedia.org/wiki/Rama\" ] } ResponseBody: { \"data\": { \"https://en.wikipedia.org/wiki/Rama\": \"ramakien 516832 half tdr upload latina idol sivananda kathakali .... } } /exude/swear/data POST Summary Filter the swear words from the provided input data or links Parameters Name Located in Description Required Schema type path provide the type of filtering required swear Yes string Request Body Pass the ExudeRequestBean Object, pass either text data or data links { \"data\": \"string\", \"links\": [ \"string\" ] } Responses Code Description 200 Exude response /exude/stopping/file POST Summary Filter the stopping words from the provided input file Parameters Name Located in Description Required Schema type path provide the type of filtering required stopping Yes string Request Body Pass the file binary string. { \"file\":string($binary) } Responses Code Description 200 Exude response /exude/swear/file POST Summary Filter the swear words from the provided input file Parameters Name Located in Description Required Schema type path provide the type of filtering required swear Yes string Responses Code Description 200 Exude response","title":"API Explorer"},{"location":"api-explorer/#exude-api","text":"Version: 1.0.0 Open API Swagger Spec Terms of service Terms","title":"Exude API"},{"location":"api-explorer/#exudestoppingdata","text":"","title":"/exude/stopping/data"},{"location":"api-explorer/#post","text":"","title":"POST"},{"location":"api-explorer/#summary","text":"Filter the stopping words from the provided input data or links","title":"Summary"},{"location":"api-explorer/#parameters","text":"Name Located in Description Required Schema type path provide the type of filtering required stopping Yes string","title":"Parameters"},{"location":"api-explorer/#request-body","text":"Pass the ExudeRequestBean Object, pass either text data or data links { \"data\": \"string\", \"links\": [ \"string\" ] }","title":"Request Body"},{"location":"api-explorer/#responses","text":"Code Description 200 Exude response Sample RequestBody: { \"links\":[ \"https://en.wikipedia.org/wiki/Rama\" ] } ResponseBody: { \"data\": { \"https://en.wikipedia.org/wiki/Rama\": \"ramakien 516832 half tdr upload latina idol sivananda kathakali .... } }","title":"Responses"},{"location":"api-explorer/#exudesweardata","text":"","title":"/exude/swear/data"},{"location":"api-explorer/#post_1","text":"","title":"POST"},{"location":"api-explorer/#summary_1","text":"Filter the swear words from the provided input data or links","title":"Summary"},{"location":"api-explorer/#parameters_1","text":"Name Located in Description Required Schema type path provide the type of filtering required swear Yes string","title":"Parameters"},{"location":"api-explorer/#request-body_1","text":"Pass the ExudeRequestBean Object, pass either text data or data links { \"data\": \"string\", \"links\": [ \"string\" ] }","title":"Request Body"},{"location":"api-explorer/#responses_1","text":"Code Description 200 Exude response","title":"Responses"},{"location":"api-explorer/#exudestoppingfile","text":"","title":"/exude/stopping/file"},{"location":"api-explorer/#post_2","text":"","title":"POST"},{"location":"api-explorer/#summary_2","text":"Filter the stopping words from the provided input file","title":"Summary"},{"location":"api-explorer/#parameters_2","text":"Name Located in Description Required Schema type path provide the type of filtering required stopping Yes string","title":"Parameters"},{"location":"api-explorer/#request-body_2","text":"Pass the file binary string. { \"file\":string($binary) }","title":"Request Body"},{"location":"api-explorer/#responses_2","text":"Code Description 200 Exude response","title":"Responses"},{"location":"api-explorer/#exudeswearfile","text":"","title":"/exude/swear/file"},{"location":"api-explorer/#post_3","text":"","title":"POST"},{"location":"api-explorer/#summary_3","text":"Filter the swear words from the provided input file","title":"Summary"},{"location":"api-explorer/#parameters_3","text":"Name Located in Description Required Schema type path provide the type of filtering required swear Yes string","title":"Parameters"},{"location":"api-explorer/#responses_3","text":"Code Description 200 Exude response","title":"Responses"},{"location":"api-server/","text":"Docker PENDING.... Cloud Exude API is deployed on the Heruko cloud server. Exude API: https://exude-api.herokuapp.com/","title":"API Server"},{"location":"developer-guide/","text":"GitHub Full Source code of the Exude library and API is available on the github. Exude Library : Exude Library Source Exude API REST: Exude API REST Source Exude Maven Repository: Exude Maven Repo <dependency> <groupId>com.uttesh</groupId> <artifactId>exude</artifactId> <version>0.0.4</version> </dependency> Swagger/Open API Spec: API Spec","title":"Source Code,bugs"},{"location":"developer-guide/#github","text":"Full Source code of the Exude library and API is available on the github. Exude Library : Exude Library Source Exude API REST: Exude API REST Source Exude Maven Repository: Exude Maven Repo <dependency> <groupId>com.uttesh</groupId> <artifactId>exude</artifactId> <version>0.0.4</version> </dependency> Swagger/Open API Spec: API Spec","title":"GitHub"},{"location":"license/","text":"(The Apache License) Copyright (c) 2018-2020 Uttesh Kumar T.H. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"}]}